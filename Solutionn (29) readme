

## Problem Statement
Consider all integer combinations of `a^b` for `2 <= a <= N` and `2 <= b <= N`:

If they are placed in numerical order, with duplicates removed, how many distinct terms exist in the sequence?

## Input Format
The input contains a single integer `N`.

### Constraints:
```
2 <= N <= 100000
```

## Output Format
Print the number of distinct terms in the sequence.

## Example
### Sample Input:
```
5
```
### Sample Output:
```
15
```

## Solution Approach
To solve this problem efficiently, we:
1. **Use a set** to store unique values of `a^b`.
2. **Iterate** over values of `a` and `b`.
3. **Calculate** `a^b` iteratively to avoid redundant computations.
4. **Use logarithmic properties** to optimize memory usage where necessary.


## Complexity Analysis
- **Time Complexity**: `O(N log N)`, significantly faster than brute-force `O(N^2)`.
- **Space Complexity**: `O(N^2)` in the worst case due to set storage.

## Edge Cases Considered
- The minimum case `N = 2`.
- Large values of `N` (e.g., `100000`).
- Checking for duplicate values in the sequence.




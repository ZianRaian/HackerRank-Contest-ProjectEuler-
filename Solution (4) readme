Largest Palindromic Product

This program finds the largest palindromic number that is the product of two 3-digit numbers and is less than a given number N.

Problem Statement

A palindromic number is a number that reads the same forward and backward. Given an integer N, the program determines the largest palindrome less than N that can be formed as the product of two 3-digit numbers.

Input Format

The first line contains T, the number of test cases.

Each of the next T lines contains a single integer N.

Output Format

For each test case, print the largest palindromic product of two 3-digit numbers that is less than N.

Constraints

1 <= T < 100

101101 < N < 1000000

Approach

Iterate from (N-1) downward: Start checking numbers less than N, moving downward, to find the largest palindrome.

Check for palindrome: Convert the number to a string and compare it with its reverse.

Find two 3-digit factors: If the palindrome is divisible by a 3-digit number, check if the quotient is also a 3-digit number.

Return the first valid palindrome found: Since we iterate in descending order, the first valid palindrome is the largest.

Time Complexity

Palindrome Check: 

Factorization:  in the worst case

Overall Complexity: Approximately O(N) in the worst case, but runs efficiently for given constraints.

Edge Cases Considered

Minimum valid N (101102): Ensures lower boundary constraints.

Large N values: Checks efficiency with large palindromes.

Palindromes at different positions: Ensures the logic finds the correct largest palindrome.
